2019-09-10 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* Version 0.8.0

	* CHANGE: INSTALL.md -> INSTALL

	* ADD: meson.build (vcs_tag)

	Dynamically generate the VERSION macro according to git tag and commit
	SHA-1

2019-09-09 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* FIX: exon.c (exon_tree_lookup_dump): Thread-safe

	The alignment_id was included inside ExonTree object, which in turn was
	shared among all threads. With no mutex, may occur shocking among all
	alignment_id values. In order to fix it, a new private struct keeps
	ExonTree and alignment_id separately

	* ADD: abnormal.c, exon.c, process_sample.c: loginfo

	Improve log messages for debugging and change attribute name num_threads
	in AbnormalArg to inc_step - this way is more descriptive about its
	function

2019-09-08 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* FIX: db.c (db_create_tables): source foreign key

	* CHANGE: Move from Autotools to Meson build system

	* REMOVE: Autotools

2019-09-06 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: cluster.c (index_alignment_qname)

	Add index for alignment qname for speed up query. Update
	prepare_query_stmt() in order to avoid the abnormal reads that
	fall into their on parental gene

2019-09-05 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: --phred-quality option

	Add phred quality score filter option in order to avoid low mapped
	quality reads

2019-08-31 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* CHANGE: dbscan.c (dbscan_cluster): List -> Set

	* Change List *seed to Set *seed in order to speed up union statement

	* REMOVE: set.c (set_insert_all, set_remove_all)

	* ADD: set.c: Set interface

	* ADD: hash.c (direct_hash, direct_equal)

2019-08-26 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: tests: checked fixtures

2019-08-23 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* CHANGE: hash.c: New extensible hash algorithm

	Move from chaining hash type to extensible hash. Now it has no need to
	declare the hash size in 'new' function, because it is dynamically
	allocated.

2019-08-15 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: configure.ac: -Wextra -Wpedantic

	* FIX: Remove -Wunused-variable

	* FIX: db_merge.c (db_merge): Remove *db2 redundancy

2019-08-14 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* Version 0.7.0

2019-08-13 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: configure.ac (AM_INIT_AUTOMAKE)

	AM_INIT_AUTOMAKE(-Wall -Werror) and AM_PROG_AR macros

	* FIX: check_sider_*.c: Move log_set_quiet to main

	* ADD: db.c (db_{insert,check}_schema_version)

	Add a new table 'schema' with a single column called 'version'. Its
	function is keep track of the database schema state in a versioned way

2019-08-06 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: process_sample.c: max_distance, sorted

	Add CLI options --max-distance, --sorted. The former for getting a
	cutoff of maximum distance allowed between paired-end reads, and the
	last for considering all files queryname sorted

	* FIX: check_sider_abnormal.c (sam_{un}sorted)

	* FIX: cluster.c, merge_call.c: Remove typos

	* CHANGE: abnormal.c (parse_{sorted,unsorted}_sam)

	Change abnormal interface to handle sorted and unsorted SAM/BAM files

2019-08-01 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* Version 0.6.0

	* ADD: check_sider_db_merge.c: Test db_merge.c

2019-07-31 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: check_sider_db.c: Test low-level and schema

	* ADD: check_sider_{utils,wrapper}.c: signal test

	* ADD: utils.c (setup_signal)

	Add setup_signal function to facilitate signal handling

	* ADD: wrapper.c (xsigaction)

	* ADD: check_sider_hash.c (test_hash_int)

2019-07-30 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: check_sider_wrapper.c

	Add tests for wrapper interface

	* ADD: check_sider_utils.c (equalstring, cmpstringp)

	* ADD: COVERALLS support via TravisCI

	* FIX: check_sider_cluster.c coverage

2019-07-29 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* FIX: bitree.c (bitree_traverse)

	Fix bitree inorder, preorder, postorder traverse

	* ADD: gff.c tests (gff_entry_dup)

	* ADD: merge_call.c: option --in-place

	* FIX: process_sample.c (cmpstringp)

	* ADD: array.c (array_data)

	* ADD: utils.c (cmpstringp, equalstring)

	* ADD: array.c (find, remove)

	Add array_find, array_find_with_equal_fun, array_remove and
	array_remove_index

2019-07-27 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* REMOVE: cluster.c (prepare_query_stmt)

	Remove unnecessary log_debug showing the sql statement compiled

	* ADD: db_merge.c interface

	Add db_merge function to merge all batchs into one SQLite3 database. The
	function aims to append new values without breaking foreign key
	constraints. The table 'exon' cannot hold duplicate values, so all
	values of the first database is inserted, whereas the following
	databases values are inserted if they are not present in the merged
	table

	* ADD: hash.c (int_hash, int_equal)

	* CHANGE: dbc: More wrappers on SQLite3

	Add low-level wrappers on SQLite3 functions in order to avoid so many
	testing against each statement. Now the sqlite3_stmt methods wrappers
	can be called just with its 'class' - no need to pass sqlite3 object as
	well

2019-07-23 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* FIX: cluster.c (prepare_query_stmt)

	Change SQL select statement, in order to catch the reads which
	falls into an exonic region and whose mate, as well, falls into an
	exonic region

	* ADD: check_sider_cluster.c testing  for cluster.c

2019-07-21 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* FIX: merge_call.c (merge_call): db_connect

	* ADD: cluster.c (cluster): Print number of clusters

	* ADD: merge-call command

	* ADD: cluster.c interface

	Add 'cluster' to handle DBSCAN calling

2019-07-20 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: db.c (db_{prepare,insert}_clustering)

	Add table 'clustering' to database in order to keep organized the
	possibilities of retrocopies found

	* ADD: dbscan.c interface

	* Add DBSCAN (Density-Based Spatial Clustering of Applications with Noise)

2019-07-18 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* FIX: process_sample.c (parse_process_sample ..)

	Test for arguments and options just at the beggining of the function

	* ADD: main.c (main): Short alias to subcommands

	* ADD: db.c (db_create_tables): New table 'batch'

	Add a new table called 'batch', in order to keep a grouping relation
	among all SAM/BAM files processed at process-sample step

2019-07-17 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: CLI interface based in subcommands

	In db.c, remove the column 'name' from table 'source', so it requires
	only one id and the alignment file path.
	Finally, begin to implement CLI interface based in subcommands. For now
	there is only one subcommand working: 'process-sample'

	* ADD: logger.c interface

	logger interface handles log.c attributes, so it allocs mutex and open
	log file - dealing with the file pointer as well.

	* FIX: check_sider_abnormal.c: Remove gtf tempfile

	* ADD: utils.c (mkdir_p): Works similar to mkdir -p

	* ADD: wrapper.c (xmkdir)

	* ADD: io.c interface to handle input file

	Also fix tests for check_sider_process_sample.c - It was renamed from
	check_sider_sider.c

	* RENAME: sider.c -> process_sample.c

2019-07-12 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* Version 0.5.0

	* ADD: check_sider_abnormal.c: Test for abnormal.c

	* ADD: check_sider_gff.c: Test for gff.c

2019-07-11 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: exon.c, thpool.c. FIX: abnormal.c

	Add thpool - thread pool interface to handle parallelism. The exon
	interface came to 'split' more the abnormal routine.
	The database interface for the table overlapping now includes columns
	for overlapping position and length.

	* FIX: sam.c: include "htslib/sam.h"

	* FIX: abnormal.c, db.c: -Wformat

2019-07-09 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: utils.c (upper, lower)

	* ADD: chr.c interface

	Add human chromosome standardization - according to gencode
	pattern: chr1, chrX, chrM etc.

	* ADD: configure.ac (AM_SILENT_RULES([yes]))

	Makefile less verbose! To return to the more verbose pattern:
	make V=1

2019-07-08 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: ibitree.c (ibitree_lookup)

	Add IBiTreeLookupData struct to hold node and interval ranges, plus the
	overlapping position and its length.

	* ADD: sam.c (sam_test_sorted_order)

	* FIX: hash.c, list.c: <config.h> -> "config.h"

2019-07-07 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: db.c (db_[prepare,insert]_source)

	Add table source to hold genotype information.
	Encloses writing functions with mutexes for thread-safety

2019-07-05 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* FIX: abnormal.c (dump_if_abnormal, dump_alignment)

	Fix weird type with chromosome and distance flags at the same fragment.
	Add flag type for exonic reads

2019-06-30 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: abnormal.c: exonic filter

	Change gene table to exon table in order to simplify insertion and
	querying. Add exonic filtering based in the interval search tree

2019-06-24 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: sqlite3.c interface

	Include sqlite-amalgamation-3280000 to the source code. This way, it's
	not necessary to link against libsqlite3.so. According to the official
	SQLite documentation:
	"The use of the amalgamation is recommended for all applications"

	* ADD: check_sider_db.c

2019-06-23 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: str.c (string_clear)

	* ADD: gff.c (gff_entry_dup, gff_entry_copy)

	* ADD: db.c interface

	* CHANGE: abnormal.c

	Save all results into SQLite database

2019-06-14 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* CHANGE: ibitree (ibitree_lookup)

	ibitree_lookup () acceps now node_overlap_frac, interval_overlap_frac
	and either parameters. Those variables permit tunning searching:

	node_overlap_frac = fraction covered of node range when overlapped;
	interval_overlap_frac = fraction covered of interval range when
	overlapped;

	either = AND boolean is used by default, so node_overlap_frac AND
	interval_overlap_frac must be true in overlapping. If either is true, OR
	boolean is used instead of AND;

2019-06-01 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: str.c interface

	Add string interface and wrapper snprintf, vsnprintf functions. Also
	include some tests and fix utils.c (xstrdup_concat).
	Add gff interface to Makefile.am.

2019-05-27 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* Version 0.4.0

	* ADD: gff.c (gff_attribute_find, gff_entry_copy)

2019-05-26 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* FIX: ibitree.c (lookup): Change return to void

	* FIX: ibitree.c (rotate_left,rotate_right)

	Fix bug in rotate_left and rotate_right. Update
	the max attribute after the node rotation.

2019-05-16 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: check_sider_utils.c: (test_xasprintf_concat,test_xstrdup_concat)

	* FIX: utils.c (xstrdup_concat): memset

2019-05-14 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* FIX: gff.c (gff_read): Number of line and fields check

	* ADD: utils.c (xstrdup_concat)

2019-05-13 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: gff.c: GFF/GTF interface

	* ADD: utils.c (trimc)

2019-04-26 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: ibitree.c interface (interval tree)

	* REMOVE: BiFunc, CompareFunc. ADD: bitree_traverse

2019-04-24 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: bitree interface

2019-04-17 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: abnormal.c interface

2019-04-11 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: sam_sort.c from samtools (bam_sort.c)

2019-04-07 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: align interface to combine 'bwa mem' with 'samtools'

2019-04-07 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* Version 0.3.0

	* ADD: local bwa mem interface

	* ADD: xfprintf, xputs, xfflush

	* ADD: build bwa

2019-04-06 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: git submodule bwa v0.7.17

	* FIX: configure.ac: zlib checks

2019-04-05 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* FIX: local htslib building

	* ADD: more sugar wrappers

	* FIX: suit building to htslib submodule

2019-04-03 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: git submodule htslib

2019-04-02 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: sam interface

	* ADD: wrapper.c (xpopen, xpclose)

	* ADD: utils.c (xasprintf_concat)

	* ADD: log.h (log_fatal, log_errno_fatal, log_errno_error)

2019-03-30 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: utils.c (path_dir, path_file)

2019-03-29 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* Version 0.2.0

	* ADD: hash.c: (hash_get_keys/values_as_list/array)

	* free () -> xfree ()

2019-03-28 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: array,utils,log interfaces

2019-03-27 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* FIX: hash.c: (hash_foreach, hash_iter_next): SegFault

2019-03-26 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: wrapper.c: (xasprintf)

	* ADD: hash.[ch]

	* ADD: testing for hash: check_sider_hash.c

2019-03-25 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* FIX: list.c (list_remove): leaks

2019-03-24 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* ADD: wrapper, list and types interfaces

2019-03-19 Thiago L. A. Miller <tmiller@mochsl.org.br>

	* Version 0.1.0

	* Initialize 'sideRETRO' project

	* Configure to autotools format

	* Add tests with framework 'check'
